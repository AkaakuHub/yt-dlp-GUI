name: Build App

on:
    push:

env:
    App_Name: yt-dlp-GUI
    Solution_Path: yt-dlp-GUI.sln
    App_Project_Path: yt-dlp-GUI\yt-dlp-GUI.csproj

jobs:
    build:
        if: "contains( github.ref , 'tags/v')"

        strategy:
            matrix:
                configuration: [Release]

        runs-on:
            windows-latest # For a list of available runner types, refer to
            # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

        steps:
            - name: Checkout
              uses: actions/checkout@v4.1.1
              with:
                  fetch-depth: 0

            - name: setup-msbuild
              uses: microsoft/setup-msbuild@v2

            - name: Setup NuGet.exe for use with actions
              # You may pin to the exact commit or the version.
              # uses: NuGet/setup-nuget@a21f25cd3998bf370fde17e3f1b4c12c175172f9
              uses: NuGet/setup-nuget@v2.0.0

            - name: Restore NuGet Packages
              run: nuget restore yt-dlp-GUI.sln

            - name: Build App
              run: msbuild yt-dlp-GUI.sln /p:Configuration=$env:Configuration
              env:
                  Configuration: ${{ matrix.configuration }}

            - name: Check files
              run: |
                  ls yt-dlp-GUI\bin
                  ls yt-dlp-GUI\bin\${{ matrix.configuration }}

            # Create release page: https://github.com/ncipollo/release-action
            - name: Get version
              shell: bash
              run: |
                  echo "ver=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

            - name: Get commit message and store in env
              id: get_commit_message
              run: echo "commit_message=$(git log --format=%B -n 1 ${{ github.sha }})" >> $GITHUB_ENV

            - name: Set env
              shell: bash
              run: |
                  echo "commit_message=${{ env.commit_message }}" >> $GITHUB_ENV
                  echo "version=${{ env.ver }}" >> $GITHUB_ENV          # exeに反映されます
                  # echo "fileversion=${{ env.ver }}" >> $GITHUB_ENV    # 未設定だとVersionに連動します
                  echo "app_x64_framework_name=${{ env.App_Name }}_win-x64_framework-dependent_ver${{ env.ver }}" >> $GITHUB_ENV
                  echo "app_x64_self_name=${{ env.App_Name }}_win-x64_self-contained_ver${{ env.ver }}" >> $GITHUB_ENV

            - name: zipにまとめる
              # .exeと、.exe.configをzipにまとめる
              shell: pwsh
              run: |
                  Compress-Archive -Path yt-dlp-GUI\bin\${{ matrix.configuration }}\${{ env.App_Name }}.exe, yt-dlp-GUI\bin\${{ matrix.configuration }}\${{ env.App_Name }}.exe.config -DestinationPath ${{ env.App_Name }}.zip

            - name: Create release
              # bodyにコミットメッセージを取得する
              id: create_release
              uses: ncipollo/release-action@v1
              with:
                  token: ${{ secrets.ACTIONS_TOKEN }}
                  tag: v${{ env.ver }}
                  name: v${{ env.ver }}
                  body: |
                      ${{ env.commit_message }}
                  draft: false
                  prerelease: false
                  artifacts: "${{ env.App_Name }}.zip"
